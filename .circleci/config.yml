version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.1.3
  aws-eks: circleci/aws-eks@2.2.0
  maven: circleci/maven@1.4.1
  kubernetes: circleci/kubernetes@1.3.1

jobs:
  create-deployment:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      region:
        description: |
          AWS Region of the EKS cluster
        type: string
      ecr-id:
        description: |
          AWS Account ID
        type: string
    steps:
      - checkout
      - run:
          name: aws-configure
          command: |
            sudo apt-get install awscli groff -y
            pip install awscli
            aws configure set default.region << parameters.region >>
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.region >>
          install-kubectl: true
          verbose: true
      - kubernetes/create-or-update-resource:
          resource-file-path: k8s-manifest.yml
          show-kubectl-command: true

workflows:
  java_demo_test_build_deploy:
    jobs:
      - maven/test:
          name: code-test
          filters:
            branches:
              only:
                - main
          executor:
            name: maven/default
            tag: 17.0.7
          command: 'clean test'
      - aws-ecr/build-and-push-image:
          name: build-push-image
          filters:
            branches:
              only:
                - main
          repo: "${AWS_ECR_REGISTRY_NAME}"
          tag: "latest"
          dockerfile: Dockerfile-run
          path: .
          requires:
            - code-test
      - create-deployment:
          name: deploy-to-k8s
          filters:
            branches:
              only:
                - main
          cluster-name: "${AWS_EKS_CLUSTER_NAME}"
          region: "${AWS_REGION}"
          ecr-id: "${AWS_ECR_REGISTRY_ID}"
          requires:
            - build-push-image
