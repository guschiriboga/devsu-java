version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.1.3
  maven: circleci/maven@1.4.1
  kubernetes: circleci/kubernetes@1.3.1

jobs:
  check-infra:
    parameters:
      var_check_infra:
        type: string
    docker:
      - image: alpine
    steps:
      - run:
          name: "Checks if infrastructure is up"
          command: |
            [[ << parameters.var_check_infra >> == "up" ]] && exit 0 || exit 1
  create-deployment:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      region:
        description: |
          AWS Region of the EKS cluster
        type: string
      ecr-id:
        description: |
          AWS Account ID
        type: string
      k8s-manifest:
        description: |
          k8s manifest file name
        type: string
    steps:
      - checkout
      - run:
          name: AWS and kubectl config
          command: |
            sudo apt-get update -y
            sudo apt-get install awscli groff -y
            pip install awscli
            sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - run:
          name: Configure AWS
          command: |
            aws configure set default.region << parameters.region >>
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
      - run:
          name: Login to ECR
          command: |
            aws ecr get-login-password --region << parameters.region >> | docker login --username AWS --password-stdin << parameters.ecr-id >>.dkr.ecr.<< parameters.region >>.amazonaws.com
      - run:
          name: Configure Kubectl
          command: |
            aws eks update-kubeconfig --region << parameters.region >> --name << parameters.cluster-name >>
      - run:
          name: Apply k8s manifest
          command: |
            kubectl apply -f << parameters.k8s-manifest >>
            kubectl get services

workflows:
  java_demo_test_build_deploy:
    jobs:
      - maven/test:
          name: code-test
          filters:
            branches:
              only:
                - main
          executor:
            name: maven/default
            tag: 17.0.7
          command: 'clean test'
      - check-infra:
          name: check-infra
          var_check_infra: $CHECK_INFRA
      - aws-ecr/build-and-push-image:
          name: build-push-image
          filters:
            branches:
              only:
                - main
          repo: $AWS_ECR_REGISTRY_NAME
          tag: "latest"
          dockerfile: Dockerfile-run
          path: .
          requires:
            - check-infra
            - code-test
      - create-deployment:
          name: deploy-to-k8s
          filters:
            branches:
              only:
                - main
          cluster-name: $AWS_EKS_CLUSTER_NAME
          region: $AWS_REGION
          ecr-id: $AWS_ECR_REGISTRY_ID
          k8s-manifest: "k8s-manifest.yml"
          requires:
            - build-push-image
